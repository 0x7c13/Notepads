<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AegisubAdvancedSubtitleFileDisplayName" xml:space="preserve">
    <value>Aegisub 高级字幕文件</value>
    <comment>.ass</comment>
  </data>
  <data name="AspFileDisplayName" xml:space="preserve">
    <value>ASP 文件</value>
    <comment>.asp, .aspx</comment>
  </data>
  <data name="AutoHotkeyScriptFileDisplayName" xml:space="preserve">
    <value>AutoHotkey 脚本文件</value>
    <comment>.ahk</comment>
  </data>
  <data name="BashHistoryFileDisplayName" xml:space="preserve">
    <value>Bash 历史文件</value>
    <comment>.bash_history</comment>
  </data>
  <data name="BashScriptFileDisplayName" xml:space="preserve">
    <value>Bash 脚本文件</value>
    <comment>.bash</comment>
  </data>
  <data name="BibTeXFileDisplayName" xml:space="preserve">
    <value>BibTeX 文件</value>
    <comment>.bib</comment>
  </data>
  <data name="BuildPathFileDisplayName" xml:space="preserve">
    <value>Build Path 文件</value>
    <comment>.buildpath</comment>
  </data>
  <data name="CFileDisplayName" xml:space="preserve">
    <value>C 文件</value>
    <comment>.c, .m</comment>
  </data>
  <data name="CgiFileDisplayName" xml:space="preserve">
    <value>CGI 文件</value>
    <comment>.cgi</comment>
  </data>
  <data name="CmakeFileDisplayName" xml:space="preserve">
    <value>Cmake 文件</value>
    <comment>.cmake</comment>
  </data>
  <data name="ConfigFileDisplayName" xml:space="preserve">
    <value>配置文件</value>
    <comment>.cfg, .config, .cnf, .conf</comment>
  </data>
  <data name="CppFileDisplayName" xml:space="preserve">
    <value>C++ 文件</value>
    <comment>.cpp, .cc, .mm</comment>
  </data>
  <data name="CSharpFileDisplayName" xml:space="preserve">
    <value>C# 文件</value>
    <comment>.cs</comment>
  </data>
  <data name="CssFileDisplayName" xml:space="preserve">
    <value>CSS 文件</value>
    <comment>.css, .scss</comment>
  </data>
  <data name="GitAttributesFileDisplayName" xml:space="preserve">
    <value>Git Attributes 文件</value>
    <comment>.gitattributes</comment>
  </data>
  <data name="GitConfigFileDisplayName" xml:space="preserve">
    <value>Git 配置文件</value>
    <comment>.gitconfig</comment>
  </data>
  <data name="GitIgnoreFileDisplayName" xml:space="preserve">
    <value>Git Ignore 文件</value>
    <comment>.gitignore</comment>
  </data>
  <data name="GoFileDisplayName" xml:space="preserve">
    <value>Go 文件</value>
    <comment>.go</comment>
  </data>
  <data name="HeaderFileDisplayName" xml:space="preserve">
    <value>头文件</value>
    <comment>.h, .hpp</comment>
  </data>
  <data name="HtmlFileDisplayName" xml:space="preserve">
    <value>HTML 文件</value>
    <comment>.html, .htm</comment>
  </data>
  <data name="InitializationFileDisplayName" xml:space="preserve">
    <value>初始化文件</value>
    <comment>.ini</comment>
  </data>
  <data name="JavaFileDisplayName" xml:space="preserve">
    <value>Java 文件</value>
    <comment>.java</comment>
  </data>
  <data name="JavascriptFileDisplayName" xml:space="preserve">
    <value>Javascript 文件</value>
    <comment>.js</comment>
  </data>
  <data name="JsonFileDisplayName" xml:space="preserve">
    <value>JSON 文件</value>
    <comment>.json</comment>
  </data>
  <data name="JspFileDisplayName" xml:space="preserve">
    <value>JSP 文件</value>
    <comment>.jsp, .jspx</comment>
  </data>
  <data name="LogFileDisplayName" xml:space="preserve">
    <value>日志文件</value>
    <comment>.log</comment>
  </data>
  <data name="LrcFileDisplayName" xml:space="preserve">
    <value>歌词文件</value>
    <comment>.lrc</comment>
  </data>
  <data name="LuaFileDisplayName" xml:space="preserve">
    <value>LUA 文件</value>
    <comment>.lua</comment>
  </data>
  <data name="MarkdownFileDisplayName" xml:space="preserve">
    <value>Markdown 文件</value>
    <comment>.md, .markdown</comment>
  </data>
  <data name="NfoFileDisplayName" xml:space="preserve">
    <value>NFO 文件</value>
    <comment>.nfo</comment>
  </data>
  <data name="NpmConfigFileDisplayName" xml:space="preserve">
    <value>NPM 配置文件</value>
    <comment>.npmrc</comment>
  </data>
  <data name="PerlFileDisplayName" xml:space="preserve">
    <value>Perl 文件</value>
    <comment>.pl</comment>
  </data>
  <data name="PhpFileDisplayName" xml:space="preserve">
    <value>PHP 文件</value>
    <comment>.php</comment>
  </data>
  <data name="ProjectFileDisplayName" xml:space="preserve">
    <value>项目文件</value>
    <comment>.project, .prj</comment>
  </data>
  <data name="PythonFileDisplayName" xml:space="preserve">
    <value>Python 文件</value>
    <comment>.py</comment>
  </data>
  <data name="RubyFileDisplayName" xml:space="preserve">
    <value>Ruby 文件</value>
    <comment>.rb</comment>
  </data>
  <data name="RunCommandsFileDisplayName" xml:space="preserve">
    <value>Run Commands 文件</value>
    <comment>.bashrc, .vimrc, .rc</comment>
  </data>
  <data name="ShellScriptFileDisplayName" xml:space="preserve">
    <value>Shell 脚本文件</value>
    <comment>.sh</comment>
  </data>
  <data name="SqlFileDisplayName" xml:space="preserve">
    <value>SQL 文件</value>
    <comment>.sql</comment>
  </data>
  <data name="SubStationAlphaSubtitleFileDisplayName" xml:space="preserve">
    <value>Sub Station Alpha 字幕文件</value>
    <comment>.ssa</comment>
  </data>
  <data name="SubtitleFileDisplayName" xml:space="preserve">
    <value>Srt 字幕文件</value>
    <comment>.srt</comment>
  </data>
  <data name="TextFileDisplayName" xml:space="preserve">
    <value>TXT 文本文档</value>
    <comment>.txt</comment>
  </data>
  <data name="TypeScriptFileDisplayName" xml:space="preserve">
    <value>TypeScript 文件</value>
    <comment>.ts</comment>
  </data>
  <data name="VerilogFileDisplayName" xml:space="preserve">
    <value>Verilog 文件</value>
    <comment>.v</comment>
  </data>
  <data name="VisualBasicFileDisplayName" xml:space="preserve">
    <value>Visual Basic 文件</value>
    <comment>.vb</comment>
  </data>
  <data name="VueConfigFileDisplayName" xml:space="preserve">
    <value>Vue 配置文件</value>
    <comment>.vuerc</comment>
  </data>
  <data name="VueFileDisplayName" xml:space="preserve">
    <value>Vue 文件</value>
    <comment>.vue</comment>
  </data>
  <data name="XmlFileDisplayName" xml:space="preserve">
    <value>XML 文件</value>
    <comment>.xml</comment>
  </data>
  <data name="YamlFileDisplayName" xml:space="preserve">
    <value>YAML 文件</value>
    <comment>.yml, .yaml</comment>
  </data>
  <data name="ZshellConfigFileDisplayName" xml:space="preserve">
    <value>Z shell 配置文件</value>
    <comment>zshrc</comment>
  </data>
  <data name="ZshellHistoryFileDisplayName" xml:space="preserve">
    <value>Z shell 历史文件</value>
    <comment>.zsh_history</comment>
  </data>
</root>