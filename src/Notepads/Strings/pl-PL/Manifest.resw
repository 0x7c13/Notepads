<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AegisubAdvancedSubtitleFileDisplayName" xml:space="preserve">
    <value>Plik Aegisub Advanced Subtitle</value>
    <comment>.ass</comment>
  </data>
  <data name="AsmFileDisplayName" xml:space="preserve">
    <value>Plik jezyka Assembly</value>
    <comment>.asm</comment>
  </data>
  <data name="AspFileDisplayName" xml:space="preserve">
    <value>Plik Active Server Page</value>
    <comment>.asp, .aspx</comment>
  </data>
  <data name="AutoHotkeyScriptFileDisplayName" xml:space="preserve">
    <value>Plik skryptu AutoHotkey</value>
    <comment>.ahk</comment>
  </data>
  <data name="BashAliasesFileDisplayName" xml:space="preserve">
    <value>Plik Bash Aliases</value>
    <comment>.bash_aliases</comment>
  </data>
  <data name="BashHistoryFileDisplayName" xml:space="preserve">
    <value>Plik Bash History</value>
    <comment>.bash_history</comment>
  </data>
  <data name="BashLoginFileDisplayName" xml:space="preserve">
    <value>Plik Bash Login</value>
    <comment>.bash_login</comment>
  </data>
  <data name="BashLogoutFileDisplayName" xml:space="preserve">
    <value>Plik Bash Logout</value>
    <comment>.bash_logout</comment>
  </data>
  <data name="BashProfileFileDisplayName" xml:space="preserve">
    <value>Plik Bash Profile</value>
    <comment>.bash_profile</comment>
  </data>
  <data name="BashScriptFileDisplayName" xml:space="preserve">
    <value>Plik skryptu Bash</value>
    <comment>.bash</comment>
  </data>
  <data name="BibTeXFileDisplayName" xml:space="preserve">
    <value>Plik BibTeX</value>
    <comment>.bib</comment>
  </data>
  <data name="BondFileDisplayName" xml:space="preserve">
    <value>Plik Bond</value>
    <comment>.bond</comment>
  </data>
  <data name="BuildPathFileDisplayName" xml:space="preserve">
    <value>Plik Eclipse Build Path</value>
    <comment>.buildpath</comment>
  </data>
  <data name="CFileDisplayName" xml:space="preserve">
    <value>Kod źródłowy języka C</value>
    <comment>.c, .m, .i</comment>
  </data>
  <data name="CgiFileDisplayName" xml:space="preserve">
    <value>Plik Common Gateway Interface</value>
    <comment>.cgi</comment>
  </data>
  <data name="ClojureFileDisplayName" xml:space="preserve">
    <value>Plik Clojure</value>
    <comment>.clj, .cljs, .cljc, .cljx, .clojure, .edn</comment>
  </data>
  <data name="CmakeFileDisplayName" xml:space="preserve">
    <value>Plik CMake</value>
    <comment>.cmake</comment>
  </data>
  <data name="CoffeeScriptFileDisplayName" xml:space="preserve">
    <value>Plik CoffeeScript</value>
    <comment>.coffee, .cson, .iced</comment>
  </data>
  <data name="CommaSeparatedValuesFileDisplayName" xml:space="preserve">
    <value>Plik Comma Separated Values</value>
    <comment>.csv</comment>
  </data>
  <data name="ConfigFileDisplayName" xml:space="preserve">
    <value>Ustawienia konfiguracji</value>
    <comment>.cfg, .config, .cnf, .conf, .properties, .directory</comment>
  </data>
  <data name="CppFileDisplayName" xml:space="preserve">
    <value>Kod źródłowy języka C++</value>
    <comment>.cpp, .cc, .mm, .cxx, .ii, .ino</comment>
  </data>
  <data name="CSharpFileDisplayName" xml:space="preserve">
    <value>Kod źródłowy języka C#</value>
    <comment>.cs, .csx, .cake</comment>
  </data>
  <data name="CssFileDisplayName" xml:space="preserve">
    <value>Kaskadowy arkusz stylów</value>
    <comment>.css, .scss</comment>
  </data>
  <data name="DatFileDisplayName" xml:space="preserve">
    <value>Plik DAT</value>
    <comment>.dat</comment>
  </data>
  <data name="DiffFileDisplayName" xml:space="preserve">
    <value>Plik Diff</value>
    <comment>.patch, .diff, .rej</comment>
  </data>
  <data name="DockerFileDisplayName" xml:space="preserve">
    <value>Plik Docker File</value>
    <comment>.dockerfile</comment>
  </data>
  <data name="EBuildFileDisplayName" xml:space="preserve">
    <value>Plik EBuild</value>
    <comment>.ebuild</comment>
  </data>
  <data name="FSharpFileDisplayName" xml:space="preserve">
    <value>Kod źródłowy języka F#</value>
    <comment>.fs, .fsi, .fsx, .fsscript</comment>
  </data>
  <data name="GitAttributesFileDisplayName" xml:space="preserve">
    <value>Plik atrybutów Git</value>
    <comment>.gitattributes</comment>
  </data>
  <data name="GitConfigFileDisplayName" xml:space="preserve">
    <value>Plik konfiguracyjny Git</value>
    <comment>.gitconfig</comment>
  </data>
  <data name="GitIgnoreFileDisplayName" xml:space="preserve">
    <value>Plik ignorujący Git</value>
    <comment>.gitignore</comment>
  </data>
  <data name="GlspFileDisplayName" xml:space="preserve">
    <value>Plik GLSP</value>
    <comment>.glsp</comment>
  </data>
  <data name="GoFileDisplayName" xml:space="preserve">
    <value>Kod źródłowy języka Google Go</value>
    <comment>.go</comment>
  </data>
  <data name="GroovyFileDisplayName" xml:space="preserve">
    <value>Plik Groovy</value>
    <comment>.groovy, .gvy, .gradle</comment>
  </data>
  <data name="HandlebarsFileDisplayName" xml:space="preserve">
    <value>Plik Handlebars</value>
    <comment>.handlebars, .hbs, .hjs</comment>
  </data>
  <data name="HeaderFileDisplayName" xml:space="preserve">
    <value>Plik Nagłowka języka C++</value>
    <comment>.h, .hpp, .hh, .hxx</comment>
  </data>
  <data name="HlslFileDisplayName" xml:space="preserve">
    <value>Plik HLSL</value>
    <comment>.hlsl, .hlsli, .fx, .fxh, .vsh, .psh, .cginc, .compute</comment>
  </data>
  <data name="HtmlFileDisplayName" xml:space="preserve">
    <value>Strona internetowa HTML</value>
    <comment>.html, .htm, .shtml, .xhtml, .mdoc, .jshtm, .volt</comment>
  </data>
  <data name="HypertextAccessFileDisplayName" xml:space="preserve">
    <value>Plik Hypertext Access</value>
    <comment>.htaccess</comment>
  </data>
  <data name="InitializationFileDisplayName" xml:space="preserve">
    <value>Ustawienia konfiguracyjne</value>
    <comment>.ini</comment>
  </data>
  <data name="InstallFileDisplayName" xml:space="preserve">
    <value>Plik Install</value>
    <comment>.install</comment>
  </data>
  <data name="JavaFileDisplayName" xml:space="preserve">
    <value>Kod źródłowy języka Java</value>
    <comment>.java, .jav</comment>
  </data>
  <data name="JavascriptFileDisplayName" xml:space="preserve">
    <value>Skrypt JavaScript</value>
    <comment>.js, .jsx, .es6, .mjs, .cjs, .pac</comment>
  </data>
  <data name="JsonFileDisplayName" xml:space="preserve">
    <value>Plik JSON</value>
    <comment>.json, .hintrc, .jsonc, .jsonld, .babelrc, .eslintrc, .jslintrc, .bowerrc, .jscsrc, .webmanifest, .har</comment>
  </data>
  <data name="JspFileDisplayName" xml:space="preserve">
    <value>Plik JavaScript Pages</value>
    <comment>.jsp, .jspx</comment>
  </data>
  <data name="LessFileDisplayName" xml:space="preserve">
    <value>Plik Less</value>
    <comment>.less</comment>
  </data>
  <data name="LogFileDisplayName" xml:space="preserve">
    <value>Plik dziennika</value>
    <comment>.log</comment>
  </data>
  <data name="LrcFileDisplayName" xml:space="preserve">
    <value>Plik tekstu piosenki</value>
    <comment>.lrc</comment>
  </data>
  <data name="LuaFileDisplayName" xml:space="preserve">
    <value>Kod źródłowy języka LUA</value>
    <comment>.lua</comment>
  </data>
  <data name="MapFileDisplayName" xml:space="preserve">
    <value>Plik Map</value>
    <comment>.map</comment>
  </data>
  <data name="MarkdownFileDisplayName" xml:space="preserve">
    <value>Kod źródłowy języka Markdown</value>
    <comment>.md, .markdown, .mkd, .mdwn, .mdown, .markn, .mdtxt</comment>
  </data>
  <data name="NfoFileDisplayName" xml:space="preserve">
    <value>Plik informacji Warez</value>
    <comment>.nfo</comment>
  </data>
  <data name="NpmConfigFileDisplayName" xml:space="preserve">
    <value>Plik konfiguracji NPM</value>
    <comment>.npmrc</comment>
  </data>
  <data name="Perl6FileDisplayName" xml:space="preserve">
    <value>Plik Perl 6</value>
    <comment>.p6, .pl6, .pm6, .nqp</comment>
  </data>
  <data name="PerlFileDisplayName" xml:space="preserve">
    <value>Kod źródłowy języka Perl</value>
    <comment>.pl, .pm, .psgi</comment>
  </data>
  <data name="PhpFileDisplayName" xml:space="preserve">
    <value>Kod źródłowy języka PHP</value>
    <comment>.php, .php4, .php5, .phtml, .ctp</comment>
  </data>
  <data name="PodFileDisplayName" xml:space="preserve">
    <value>Plik Pod</value>
    <comment>.pod, .podspec</comment>
  </data>
  <data name="PowerShellFileDisplayName" xml:space="preserve">
    <value>Skrypt PowerShell</value>
    <comment>.ps1, .psm1, .psd1, .pssc, .psrc</comment>
  </data>
  <data name="ProfileFileDisplayName" xml:space="preserve">
    <value>Plik Profile</value>
    <comment>.profile</comment>
  </data>
  <data name="ProjectFileDisplayName" xml:space="preserve">
    <value>Plik Project</value>
    <comment>.project, .prj</comment>
  </data>
  <data name="PugFileDisplayName" xml:space="preserve">
    <value>Plik Pug</value>
    <comment>.jade, .pug</comment>
  </data>
  <data name="PythonFileDisplayName" xml:space="preserve">
    <value>Skrypt języka Python</value>
    <comment>.py</comment>
  </data>
  <data name="RazorFileDisplayName" xml:space="preserve">
    <value>Plik Razor</value>
    <comment>.cshtml</comment>
  </data>
  <data name="RFileDisplayName" xml:space="preserve">
    <value>Plik R</value>
    <comment>.r, .rhistory, .rprofile, .rt</comment>
  </data>
  <data name="RubyFileDisplayName" xml:space="preserve">
    <value>Kod źródłowy języka Ruby</value>
    <comment>.rb, .rbx, .rjs, .gemspec, .rake, .ru, .erb, .rbi, .arb</comment>
  </data>
  <data name="RunCommandsFileDisplayName" xml:space="preserve">
    <value>Plik poleceń</value>
    <comment>.bashrc, .vimrc, .rc</comment>
  </data>
  <data name="RustFileDisplayName" xml:space="preserve">
    <value>Plik Rust</value>
    <comment>.rs</comment>
  </data>
  <data name="ShaderFileDisplayName" xml:space="preserve">
    <value>Plik Shader</value>
    <comment>.shader</comment>
  </data>
  <data name="ShellScriptFileDisplayName" xml:space="preserve">
    <value>Plik skryptu Shell</value>
    <comment>.sh</comment>
  </data>
  <data name="SqlFileDisplayName" xml:space="preserve">
    <value>Kod źródłowy języka SQL</value>
    <comment>.sql, .dsql</comment>
  </data>
  <data name="SubStationAlphaSubtitleFileDisplayName" xml:space="preserve">
    <value>Plik Sub Station Alpha Subtitle</value>
    <comment>.ssa</comment>
  </data>
  <data name="SubtitleFileDisplayName" xml:space="preserve">
    <value>Plik napisów</value>
    <comment>.srt</comment>
  </data>
  <data name="SwiftFileDisplayName" xml:space="preserve">
    <value>Plik Swift</value>
    <comment>.swift</comment>
  </data>
  <data name="TextFileDisplayName" xml:space="preserve">
    <value>Dokument tekstowy</value>
    <comment>.txt</comment>
  </data>
  <data name="TFileDisplayName" xml:space="preserve">
    <value>Plik T</value>
    <comment>.t</comment>
  </data>
  <data name="TypeScriptFileDisplayName" xml:space="preserve">
    <value>Kod źródłowy języka TypeScript</value>
    <comment>.ts, .tsx</comment>
  </data>
  <data name="UserFileDisplayName" xml:space="preserve">
    <value>Plik User</value>
    <comment>.user</comment>
  </data>
  <data name="VerilogFileDisplayName" xml:space="preserve">
    <value>Plik Verilog</value>
    <comment>.v</comment>
  </data>
  <data name="VisualBasicFileDisplayName" xml:space="preserve">
    <value>Kod źródłowy języka Visual Basic</value>
    <comment>.vb, .vbs, .brs, .bas</comment>
  </data>
  <data name="VueConfigFileDisplayName" xml:space="preserve">
    <value>Plik konfiguracyjny biblioteki Vue</value>
    <comment>.vuerc</comment>
  </data>
  <data name="VueFileDisplayName" xml:space="preserve">
    <value>Kod źródłowy biblioteki Vue</value>
    <comment>.vue</comment>
  </data>
  <data name="XamlFileDisplayName" xml:space="preserve">
    <value>Plik XAML</value>
    <comment>.xaml</comment>
  </data>
  <data name="XmlFileDisplayName" xml:space="preserve">
    <value>Dokument XML</value>
    <comment>.xml, .xsd, .ascx, .atom, .axml, .bpmn, .cpt, .csl</comment>
  </data>
  <data name="YamlFileDisplayName" xml:space="preserve">
    <value>Kod źródłowy języka YAML</value>
    <comment>.yml, .yaml</comment>
  </data>
  <data name="ZshellConfigFileDisplayName" xml:space="preserve">
    <value>Plik konfiguracyjny Z shell</value>
    <comment>.zshrc</comment>
  </data>
  <data name="ZshellHistoryFileDisplayName" xml:space="preserve">
    <value>Plik historii Z shell</value>
    <comment>.zsh_history</comment>
  </data>
</root>