# Universal Windows Platform build definition

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x86|x64|arm64'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      [xml]$manifest = Get-Content $(Build.SourcesDirectory)\src\Notepads\Package.appxmanifest
      $manifest.Package.Identity.Name="Notepads"
      $manifest.Package.Properties.DisplayName="Notepads App"
      $manifest.Package.Applications.Application.VisualElements.DisplayName="Notepads"
      $manifest.Package.Applications.Application.Extensions.Extension.AppExecutionAlias.ExecutionAlias.Alias="Notepads.exe"
      $manifest.Save('$(Build.SourcesDirectory)\src\Notepads\Package.appxmanifest')
    failOnStderr: true
  
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    platform: 'x64'
    solution: '$(solution)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)"
                  /p:AppxPackageDir="$(appxPackageDir)"
                  /p:AppxBundle=Always
                  /p:UapAppxPackageBuildMode=StoreUpload
                  /p:AppxPackageSigningEnabled=false'
