name:  Build

on: [push, pull_request]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release, Production]
    env:
      Solution_Name: src\Notepads.sln
      Project_Path: src\Notepads.Package\Notepads.Package.wapproj
      Vcpkg_Path: src\packages\vcpkg
      Vcpkg_Nuget_Package: ${{ github.repository_owner }}-${{ github.event.repository.name }}
      VCPKG_BINARY_SOURCES: 'clear;nuget,${{ github.repository_owner }}-${{ github.event.repository.name }},readwrite'

    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Add MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1

    # Add NuGet to the PATH: https://github.com/NuGet/setup-nuget
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5

    - name: Restore the application
      run: |
        msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
        nuget restore $env:Solution_Name
      env:
        Configuration: ${{ matrix.configuration }}

    - name: 'Setup Vcpkg Binary Caching'
      shell: 'pwsh'
      run: |
        $(src\packages\vcpkg\vcpkg fetch nuget | select -last 1) sources add `
        -source "https://nuget.pkg.github.com/$env:OWNER/index.json" `
        -storepasswordincleartext `
        -name "$env:Vcpkg_Nuget_Package" `
        -username "$env:OWNER" `
        -password "$env:PAT"
      env:
        OWNER: ${{ github.repository_owner }}
        PAT: ${{ secrets.GITHUB_TOKEN }}

    - name: Build
      run: |
        msbuild $env:Project_Path /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode /p:AppxBundle=$env:Appx_Bundle /p:AppxPackageSigningEnabled=false /p:AppxBundlePlatforms="$env:Appx_Bundle_Platforms"
      env:
        Appx_Bundle: Always
        Appx_Bundle_Platforms: x86|x64
        Appx_Package_Build_Mode: StoreUpload
        Configuration: ${{ matrix.configuration }}
